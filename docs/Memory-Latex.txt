\documentclass[10pt,a4paper,twocolumn,twoside]{article}
\usepackage[utf8]{inputenc}
\usepackage[castellano]{babel}
\usepackage{multicol}
\usepackage{graphicx}
\usepackage{fancyhdr}
\usepackage{times}
\usepackage{titlesec}
\usepackage{multirow}
\usepackage{lettrine}
\usepackage[top=2cm, bottom=1.5cm, left=2cm, right=2cm]{geometry}
\usepackage[figurename=Fig.,tablename=TAULA]{caption}
\captionsetup[table]{textfont=sc}
\usepackage{subcaption}
\usepackage{hyperref}
\usepackage{colortbl}
\usepackage{multirow}
\usepackage{graphicx}


\author{\LARGE\sffamily Luis Fernando Paz Galeano}
\title{\Huge{\sffamily Detección de imágenes o videos modificados mediante Redes Neuronales}}
\date{}

\newcommand\blfootnote[1]{%
  \begingroup
  \renewcommand\thefootnote{}\footnote{#1}%
  \addtocounter{footnote}{-1}%
  \endgroup
}

%
%\large\bfseries\sffamily
\titleformat{\section}
{\large\sffamily\scshape\bfseries}
{\textbf{\thesection}}{1em}{}

\begin{document}

\fancyhead[LO]{\scriptsize AUTOR: Luis Fernando Paz Galeano}
\fancyhead[RO]{\thepage}
\fancyhead[LE]{\thepage}
\fancyhead[RE]{\scriptsize EE/UAB TFG INFORMÁTICA: Detección de imágenes o videos modificados mediante RN}

\fancyfoot[CO,CE]{}

\fancypagestyle{primerapagina}
{
   \fancyhf{}
   \fancyhead[L]{\scriptsize TFG EN INGENIERÍA INFORMÁTICA, ESCUELA DE INGENIERÍA (EE), UNIVERSIDAD AUTÓNOMA DE BARCELONA (UAB)}
   \fancyfoot[C]{\scriptsize Junio de 2023, Escola d'Enginyeria (UAB)}
}

%\lhead{\thepage}
%\chead{}
%\rhead{\tiny EE/UAB TFG INFORMÀTICA: TÍTOL (ABREUJAT SI ÉS MOLT LLARG)}
%\lhead{ EE/UAB \thepage}
%\lfoot{}
%\cfoot{\tiny{Mes 2023, Escola d'Enginyeria (UAB)}}
%\rfoot{}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}
\pagestyle{fancy}

%\thispagestyle{myheadings}
\twocolumn[\begin{@twocolumnfalse}

%\vspace*{-1cm}{\scriptsize TFG EN ENGINYERIA INFORMÀTICA, ESCOLA D'ENGINYERIA (EE), UNIVERSITAT AUTÒNOMA DE BARCELONA (UAB)}

\maketitle

\thispagestyle{primerapagina}
%\twocolumn[\begin{@twocolumnfalse}
%\maketitle
%\begin{abstract}
\begin{center}
\parbox{0.915\textwidth}
{\sffamily
\textbf{Resum--}
Desarrollo e implementación de un sistema de detección de manipulaciones en imágenes o videos mediante el uso de Redes Neuronales constituye el objetivo central de este Trabajo de Fin de Grado. Para lograrlo, se llevó a cabo una exhaustiva exploración de técnicas de procesamiento de imágenes y aprendizaje automático, aprovechando el dataset de CASIA2 como referencia. La definición de la estructura de la red neuronal se convirtió en un factor clave, dando lugar a la realización de múltiples experimentos con el propósito de encontrar la arquitectura óptima que garantizara una detección precisa y robusta. Asimismo, se realizaron ajustes y optimizaciones de los hiperparámetros para mejorar el rendimiento del modelo. Cabe destacar la investigación dedicada a técnicas de preprocesamiento de imágenes, con el objetivo de encontrar una metodología adecuada que permitiera mejorar la calidad de las imágenes y lograr una representación óptima para la detección de manipulaciones.
\\
\\
\textbf{Paraules clau-- } Detección de manipulaciones,Redes Neuronales,Procesamiento de imágenes,Aprendizaje automático,Dataset CASIA2,Arquitectura óptima, ELA (Error Level Analysis).\\
\\
%\end{abstract}
%\bigskip
%\begin{abstract}
\bigskip
\\
\textbf{Abstract--} Development and implementation of a system for detecting manipulations in images or videos using Neural Networks is the main objective of this Thesis. To achieve this, an exhaustive exploration of image processing and machine learning techniques was carried out, utilizing the CASIA2 dataset as a reference. The definition of the neural network's structure proved crucial, leading to multiple experiments aimed at finding the optimal architecture that would ensure accurate and robust detection. Adjustments and optimizations of hyperparameters were performed to enhance the model's performance. Notably, significant research was conducted on image preprocessing techniques, aiming to identify a suitable methodology to improve image quality and achieve an optimal representation for manipulation detection.
\\
\\
\textbf{Keywords-- }Detection of manipulations, Neural Networks, Image Processing, Machine Learning, CASIA2 Dataset, Optimal Architecture, ELA (Error Level Analysis).\\
}

\bigskip

{\vrule depth 0pt height 0.5pt width 4cm\hspace{7.5pt}%
\raisebox{-3.5pt}{\fontfamily{pzd}\fontencoding{U}\fontseries{m}\fontshape{n}\fontsize{11}{12}\selectfont\char70}%
\hspace{7.5pt}\vrule depth 0pt height 0.5pt width 4cm\relax}

\end{center}

\bigskip
%\end{abstract}
\end{@twocolumnfalse}]

\blfootnote{E-mail de contacte: 1567369@uab.cat}
\blfootnote{Menció realitzada: Computació}
\blfootnote{Treball tutoritzat per: Jordi Serra Ruiz (Computació)}
\blfootnote{Curs 2022/23}
\section{Introducción}
\lettrine[lines=3]{E}{l} presente Trabajo de Fin de Grado tuvo como objetivo principal el desarrollo e implementación de un sistema de detección de imágenes y videos modificados utilizando Redes Neuronales. El propósito fundamental de este sistema fue detectar y clasificar aquellos contenidos visuales que habían sido editados, manipulados o falsificados. Para lograrlo, se emplearon técnicas de aprendizaje automático y análisis de imágenes, lo que permitió identificar anomalías y cambios en el contenido visual.\\\\
Durante el desarrollo de este proyecto, se exploraron diversas técnicas de procesamiento de imágenes y se investigaron las diferentes aplicaciones y contextos en los cuales el sistema podía ser utilizado. Entre ellos se encontraban la detección de noticias falsas, la protección de la privacidad y la seguridad en línea, así como la prevención del ciberacoso.\\\\
El sistema fue entrenado utilizando un amplio conjunto de datos, que incluía imágenes reales y modificadas. Esto permitió mejorar la precisión y robustez del sistema al momento de distinguir entre contenido genuino y aquel que había sido manipulado de alguna manera.\\\\
Además, se llevó a cabo un detallado estudio del preprocesamiento de las imágenes y su influencia en la eficacia del modelo. Se exploraron diferentes técnicas de preprocesamiento de imágenes con el objetivo de mejorar la calidad de los datos de entrada y optimizar la representación visual para la detección de contenido falso o manipulado. Estos procesos de preprocesamiento desempeñaron un papel crucial en la mejora del rendimiento del sistema, permitiendo una detección más precisa y robusta.\\\\
En resumen, el presente Trabajo de Fin de Grado se enfocó en el desarrollo e implementación de un sistema de detección de imágenes y videos modificados utilizando Redes Neuronales. A través de técnicas de aprendizaje automático, análisis de imágenes y un estudio exhaustivo del preprocesamiento de las imágenes, se buscó proporcionar una solución eficiente y precisa en la detección de contenido falso o manipulado. El proyecto no solo abordó la detección de manipulaciones, sino también la exploración del preprocesamiento de imágenes para mejorar la eficacia del modelo.
\section{Objetivos del TFG}
A continuación, se presentan los objetivos planteados para la realización de este proyecto. Inicialmente, se establecieron objetivos generales y específicos que fueron ajustados a lo largo del desarrollo del trabajo, conforme se realizaron cambios en el enfoque inicial.
\subsection{Objetivos Generales}
\begin{enumerate}
 \item Desarrollar un sistema de detección de imágenes o videos modificados utilizando técnicas de redes neuronales.
 \item Evaluar el rendimiento del sistema en términos de precisión, velocidad y eficiencia y otras métricas de interés.
 \item Comparar los resultados obtenidos con otros sistemas de detección de imágenes y videos modificados existentes.
\end{enumerate}
\subsection{Objetivos Específicos}
\begin{enumerate}
\item Realizar una revisión de la literatura existente en detección de imágenes o videos modificados, incluyendo las técnicas de redes neuronales.
\item Diseñar e implementar un conjunto de algoritmos de redes neuronales para la detección de imágenes y videos modificados.
\item Seleccionar y preparar un conjunto de datos adecuado para el entrenamiento y evaluación del sistema.
\end{enumerate}
\section{Fundamentos teóricos}
Con el fin de proporcionar una comprensión más clara del tipo de trabajo desarrollado, se procederá a explicar algunos fundamentos teóricos básicos necesarios para comprender la temática del proyecto.
\subsection{Conceptos básicos de procesamiento de imágenes y aprendizaje automático}
El procesamiento de imágenes se refiere al conjunto de técnicas y algoritmos utilizados para modificar, mejorar y analizar imágenes digitales. Estas técnicas incluyen operaciones de filtrado, segmentación, detección de bordes, reconstrucción 3D y más. El objetivo es extraer información significativa de las imágenes y mejorar su calidad visual.\\\\
Por otro lado, el aprendizaje automático es un enfoque en el que los algoritmos y modelos son capaces de aprender y mejorar automáticamente a partir de los datos. Se basa en la construcción de modelos matemáticos que pueden reconocer patrones y tomar decisiones basadas en la información proporcionada. Estos modelos son entrenados utilizando conjuntos de datos y utilizados para predecir o clasificar nuevos datos sin una programación explícita.\\\\
Cuando se combinan el procesamiento de imágenes y el aprendizaje automático, se pueden lograr avances significativos en áreas como la visión por computadora, el reconocimiento de objetos, la detección de anomalías y la clasificación de imágenes. El procesamiento de imágenes proporciona las técnicas para preprocesar y extraer características de las imágenes, mientras que el aprendizaje automático permite construir modelos capaces de reconocer patrones complejos y tomar decisiones basadas en esos patrones.
\subsection{Redes neuronales y su aplicación en la detección de manipulaciones}
Las redes neuronales son modelos computacionales inspirados en el funcionamiento del cerebro humano,están compuestas por capas de neuronas interconectadas que procesan información y realizan cálculos para realizar tareas específicas. Estas redes tienen la capacidad de aprender y generalizar a partir de ejemplos, lo que las hace especialmente efectivas en problemas de reconocimiento de patrones y clasificación de datos \cite{sencar}.\\\\
En el contexto de la detección de manipulaciones de imágenes modificadas, las redes neuronales han demostrado ser una herramienta poderosa. Se utilizan para analizar y evaluar las características visuales de las imágenes con el fin de identificar cualquier alteración o manipulación que se haya realizado.\\\\
Una de las aplicaciones más comunes es la detección de imágenes falsas o generadas por computadora, como los deepfakes, que son imágenes o videos en los que se ha reemplazado o modificado el contenido original. Las redes neuronales son entrenadas con un conjunto de datos que incluye tanto imágenes auténticas como imágenes manipuladas, lo que les permite aprender a distinguir entre ambos tipos\cite{agarwal2017}.\\\\
Para ello, se utilizan diferentes arquitecturas de redes neuronales, como las redes convolucionales, que son especialmente efectivas en el procesamiento de imágenes. Estas redes aprenden a reconocer características visuales relevantes y a detectar cambios sutiles en los patrones y texturas de las imágenes. Además, se combinan con técnicas de aprendizaje supervisado y se ajustan mediante la optimización de parámetros para lograr una detección precisa y robusta.
\section{Estado del arte}
El campo de detección de anomalías en imágenes o videos ha sido ampliamente estudiado, y existen diversos métodos y estrategias para abordar esta temática. A continuación, se presentarán algunas de las principales estrategias seguidas en la actualidad.
\subsection{Revisión de los avances y métodos existentes en detección de manipulaciones de imágenes o videos}
\begin{itemize}
\item \textbf{Análisis de inconsistencias:} Este enfoque se basa en detectar inconsistencias en diferentes características de la imagen, como la iluminación, las texturas y las propiedades geométricas. Se utilizan algoritmos de procesamiento de imágenes y técnicas de análisis estadístico para identificar patrones anómalos que puedan indicar manipulación \cite{carvalhoa}\cite{obrien1}\cite{kee}.
\item \textbf{Detección de duplicaciones:} Se emplean técnicas de reconocimiento de patrones y algoritmos de coincidencia para identificar regiones duplicadas o copiadas dentro de una imagen. Esto puede revelar intentos de clonación o manipulación de partes de la imagen \cite{rao}.
\item \textbf{Análisis forense digital:} Este enfoque utiliza métodos de análisis forense para detectar manipulaciones en imágenes, como el análisis de metadatos, ruido y huellas digitales\cite{farid1}. Se emplean algoritmos avanzados para identificar alteraciones en la imagen y determinar si ha sido modificada de alguna manera.
\item \textbf{Aprendizaje automático:} Los enfoques basados en aprendizaje automático, especialmente en redes neuronales convolucionales (CNN), han demostrado ser efectivos en la detección de manipulaciones de imágenes. Estas redes pueden aprender a reconocer patrones específicos asociados con la manipulación y clasificar imágenes como genuinas o manipuladas \cite{rajini}.
\item \textbf{Técnicas de compresión y codificación:} Algunas manipulaciones de imágenes pueden dejar rastros en el proceso de compresión y codificación. Se utilizan métodos de análisis de compresión para detectar alteraciones o inconsistencias en los datos de la imagen que puedan indicar manipulación.
\end{itemize}
\section{Metodología}
A continuación, se presenta la metodología seguida en el desarrollo del proyecto, junto con una explicación de las diferentes fases en las que se dividió.
\subsection{Descripción de la metodología utilizada para el desarrollo del sistema de detección} 
En el proyecto, se siguió un enfoque metodológico iterativo y experimental, con ciclos repetidos de trabajo, evaluación y mejora continua. Se utilizó un diagrama de Gantt para una organización efectiva y seguimiento adecuado, abarcando las fases de planificación, implementación, evaluación y presentación.\\\\
En las fases de planificación, se definieron objetivos, adoptaron metodologías adecuadas y recopiló información relevante a través de actividades como revisión bibliográfica y selección de técnicas.\\
Las fases de implementación se enfocaron en la ejecución del proyecto, incluyendo la implementación del sistema de detección, identificación de variables a medir y monitoreo constante para corregir desviaciones.\\\\
Las fases de evaluación y presentación se dedicaron a analizar resultados, elaborar informes y comunicar hallazgos y conclusiones.\\\\
El trabajo se organizó en iteraciones, donde cada una representaba un ciclo completo de actividades con objetivos claros. Se implementaron tareas y técnicas específicas para mejorar la precisión, como experimentos controlados y análisis de métricas relevantes.\\\\
Después de la implementación, se evaluaron los resultados utilizando métricas predefinidas y se recopiló retroalimentación de los tutores y compañeros de estudio. Con base en los resultados, se realizaron mejoras y ajustes en el enfoque, incluyendo modificaciones en las técnicas, ajuste de parámetros y cambios en la metodología de recolección de datos.\\\\
Se mantuvieron registros detallados de actividades, decisiones y resultados para tener una visión clara de la evolución del proyecto a lo largo de todo el proceso.
\begin{itemize}
\item \textbf{Investigación}: Se realizó una investigación exhaustiva con el objetivo de obtener papers y referentes relevantes en el campo de detección de manipulación en imágenes y videos. Se consultaron fuentes confiables y se revisaron los trabajos destacados de reconocidos expertos en el área, como Hany Farid, Siwei Lyu y Yuenzun Li. El propósito fue adquirir un conocimiento sólido sobre los métodos existentes y enfoques utilizados en la detección de manipulación de imágenes.
\item \textbf{Selección del enfoque:}Basándonos en la investigación realizada, se optó por centrar el proyecto en el desarrollo de un modelo de inteligencia artificial basado en redes neuronales convolucionales. Este enfoque ha demostrado ser altamente efectivo en tareas de visión por computadora y es especialmente adecuado para la detección de manipulaciones en imágenes.
\item \textbf{Desarrollo del dataset:} Se decidió crear y construir un dataset personalizado utilizando imágenes del dataset de \href{https://www.image-net.org/}{ImageNet}. Se tomaron imágenes al azar y se realizaron recortes de objetos presentes en cada imagen. Estos objetos recortados se pegaron en otras imágenes seleccionadas al azar, variando los tamaños y posiciones de manera aleatoria. Esto generó un dataset diverso y realista que simula manipulaciones en las imágenes.
\item \textbf{Primera aproximación:} Se desarrolló un clasificador utilizando el modelo de redes neuronales convolucionales. Sin embargo, los resultados obtenidos en esta etapa inicial fueron insatisfactorios en términos de precisión y capacidad para detectar manipulaciones. Esto indicó la necesidad de ajustar y mejorar el modelo y enfoques utilizados.
\item \textbf{Preprocesamiento de imágenes:} Se priorizó el preprocesamiento de las imágenes para extraer y resaltar las características principales relevantes para la detección de manipulación. Se exploraron diversas técnicas, como Fourier, Wavelet, suavización de imagen, HOG (Histograma de Gradientes Orientados), Canny, decorrelación, BDCT (Block Discrete Cosine Transform) y ELA (Error Level Analysis)\cite{abdwarif}. Cada técnica se aplicó a las imágenes antes de pasarlas al modelo, evaluando su eficacia para mejorar la capacidad de detección.
\item \textbf{Evaluación de resultados:} Se realizaron análisis exhaustivos para evaluar los resultados obtenidos después del preprocesamiento y clasificación de las imágenes. Se observó que el uso de la técnica de ELA proporcionó resultados prometedores, logrando una precisión de aproximadamente 92\%. Esto indicó que ELA era una técnica efectiva para la detección de manipulación, y se decidió utilizarla en las siguientes etapas.
\item \textbf{Detección del área modificada:} Se planteó como objetivo detectar el área o zona modificada en las imágenes. Para ello, se realizó una extracción de máscaras utilizando tanto las imágenes originales como las imágenes modificadas, con el propósito de identificar y visualizar las diferencias entre las dos versiones de la imagen. Se intentó entrenar un modelo paralelo para generar máscaras de las áreas modificadas, pero debido a la complejidad y tiempo requeridos para su implementación, no se lograron obtener resultados satisfactorios en esta etapa.
\item \textbf{Exploración de otras técnicas:} Además de las técnicas convolucionales utilizadas anteriormente, se exploraron otras técnicas como la distribución de píxeles, histograma de gradientes orientados e inconsistencia de luz. Estas técnicas se aplicaron para analizar patrones de distribución, cambios en los valores de píxeles y variaciones en la iluminación de la imagen, con el objetivo de mejorar la capacidad de detección de manipulación.
\item \textbf{Ajuste de parámetros:} Se dedicó tiempo y recursos computacionales al ajuste de los parámetros del modelo, realizando múltiples entrenamientos y pruebas con diferentes combinaciones de parámetros para encontrar la configuración óptima que maximizara el rendimiento y precisión del modelo.
\item \textbf{Experimentos con el dataset:} Se realizaron experimentos utilizando el dataset CASIA2, que incluía imágenes falsificadas en formatos JPG y .tif. Se convirtieron todas las imágenes a formato JPG y se aplicó Data Augmentation para aumentar la diversidad del dataset. Sin embargo, el cambio de formato provocó un sobreajuste en el modelo, resultando en clasificaciones incorrectas de imágenes falsificadas como reales. Esto destaca la importancia de adaptar el enfoque de detección de manipulación según las características del dataset.
\end{itemize}
\section{Experimentos}
Durante el desarrollo del proyecto, se llevaron a cabo pruebas y evaluaciones con el fin de validar la efectividad del sistema de detección propuesto. A continuación, se detallarán los procedimientos y resultados obtenidos durante esta etapa de desarrollo.
\subsection{Descripción de los experimentos realizados y los conjuntos de datos utilizados}
La arquitectura de la red neuronal se basó en un enfoque presentado en un artículo previo\cite{rao}, reconocido por su relevancia y éxito en investigaciones anteriores.\\\\
Se iniciaron experimentos utilizando el dataset \href{https://www.kaggle.com/datasets/divg07/casia-20-image-tampering-detection-dataset}{CASIA2}, ampliamente utilizado en la detección de manipulaciones en imágenes. Se aplicó transfer learning con la red ResNet50, conocida por su alto rendimiento en clasificación de imágenes. Sin embargo, los resultados fueron modestos, evidenciando una limitada capacidad de generalización del modelo. Replicar fielmente la estructura de la red original presentó un desafío durante esta etapa.\\\\
Luego, se consideró el uso del dataset ImageNet, específicamente \href{https://www.kaggle.com/c/tiny-imagenet}{tiny-imagenet-200}. Tras un análisis detallado, se decidió crear un nuevo conjunto de datos mediante la inserción aleatoria de objetos de otras imágenes, buscando diversidad y mayor información sobre autenticidad y localización de los objetos. Desarrollar un programa generador de imágenes manipuladas fue un desafío en esta fase.\\\\
Una vez creado el nuevo dataset, se empleó la arquitectura previa de la red neuronal para entrenar y evaluar el modelo. Sin embargo, los resultados obtenidos durante el entrenamiento y las pruebas no fueron satisfactorios, con una precisión de clasificación alrededor del 50\%. Esto requirió revisar y ajustar tanto la arquitectura de la red como los parámetros de entrenamiento para mejorar el rendimiento.\\\\
Posteriormente, se decidió retomar el uso del dataset \href{https://www.kaggle.com/datasets/divg07/casia-20-image-tampering-detection-dataset}{CASIA2} y mejorar la arquitectura de la red neuronal mediante modificaciones al enfoque inicial. Se exploraron diferentes configuraciones, como cambios en el número y tamaño de los kernels, con el objetivo de mejorar el rendimiento del modelo.\\\\
Se prestó especial atención al preprocesamiento de las imágenes, investigando diversas técnicas para obtener características e información relevante. Las técnicas consideradas incluyeron:
\begin{itemize}
    \item \textbf{ELA (Error Level Analysis):} Esta técnica ha demostrado obtener los mejores resultados hasta el momento al medir las diferencias de compresión entre las regiones de una imagen.Proporciona una medida de la diferencia de compresión entre las diferentes regiones de una imagen \cite{abdwarif}.
    \item \textbf{BDCT (Block Discrete Cosine Transform):} Se utilizó esta transformada para descomponer la imagen en frecuencias espaciales, capturando características de texturas y detalles de manera eficiente.
    \item \textbf{Decorrelación:} Se aplicó la técnica de decorrelación para reducir la redundancia de datos en la imagen y resaltar características relevantes.
    \item \textbf{Canny:} Se empleó el operador de detección de bordes de Canny, que identifica los bordes utilizando filtrado y umbralización en múltiples etapas.
    \item \textbf{Sobel:} Se utilizó el operador de Sobel para resaltar los bordes en la imagen mediante el cálculo de derivadas parciales en direcciones horizontal y vertical.
\end{itemize}
Además de estas técnicas, se exploró el uso de los canales Y, Cb y Cr para extraer características utilizables en una red neuronal convolucional. También se realizaron pruebas con la transformada wave bidimensional discreta, aunque los resultados obtenidos no fueron tan prometedores como con otras técnicas.\\\\
A continuación, se presentan los resultados obtenidos para cada una de las técnicas evaluadas:
\begin{table}[h]
\centering
\caption{Resultados con preprocesamiento}
\begin{tabular}{|l|c|c|c|c|}
\hline
\textbf{Téc.} & \textbf{Prec.} & \textbf{Sens.} & \textbf{Espec.} & \textbf{F1} \\
\hline
ELA & 0.96 & 0.93 & 0.05 & 0.17 \\
Y,Cb,Cr & 0.802 & 0.79 & 0.36 & 0.4 \\
BDCT & 0.845 & 0.78 & 0.35 & 0.475 \\
Canny & 0.782 & 0.78 & 0.48 & 0.515 \\
Decorrelate & 0.782 & 0.78 & 0.495 & 0.51 \\
Sobel & 0.78 & 0.78 & 0.49 & 0.52 \\
\hline
\end{tabular}
\end{table}\\
Después de un análisis exhaustivo de las técnicas de preprocesamiento de imágenes y su aplicación antes de ingresarlas al modelo, se observó una mejora significativa en las métricas de rendimiento. La técnica de Análisis de Error de Nivel (ELA) demostró ofrecer los mejores resultados y se seleccionó como la opción preferida.\\\\
A continuación, se centró en identificar el tipo de modificación realizada en una imagen, como copia/pegado o splicing. Se utilizó el dataset CASIA y se implementó un clasificador para categorizar las imágenes según el tipo de modificación. Sin embargo, los resultados mostraron una precisión de alrededor del 64\%, lo que llevó a descartar esta idea al considerar sus limitaciones.\\\\
Posteriormente, se enfocó en el objetivo de localizar el área modificada en la imagen. Se exploró la idea de desarrollar un modelo basado en máscaras de diferencia entre una imagen auténtica y una manipulada. A pesar de ser una idea ambiciosa, los resultados obtenidos no fueron satisfactorios, ya que la localización del área modificada resultó ser un desafío complejo.\\\\
Esto llevó a considerar otras técnicas para detectar alteraciones en la imagen:
\begin{itemize}
\item \textbf{Distribución de píxeles:} Esta técnica analiza la distribución de los valores de los píxeles en una imagen para detectar posibles áreas modificadas. Las imágenes auténticas tienen distribuciones más uniformes, mientras que las manipuladas muestran patrones irregulares. Se pueden aplicar técnicas estadísticas, como estimación de entropía o cálculo de varianza, para identificar anomalías en la distribución de píxeles.
\item \textbf{Histograma de Gradientes Orientados (HOG):}El HOG extrae características visuales basadas en los gradientes locales de la imagen. Es útil para capturar patrones específicos de manipulaciones, como bordes irregulares o regiones con texturas incoherentes. Mediante el análisis de descriptores de HOG, se pueden identificar áreas modificadas.
\item \textbf{Detección de sombras:} Esta técnica identifica regiones con iluminación inconsistente en la imagen. Las manipulaciones pueden alterar sombras naturales o crear sombras artificiales que no coinciden con la imagen. Al detectar estas discrepancias, se pueden identificar áreas sospechosas de manipulación.
\item \textbf{Inconsistencia de iluminación:} Esta técnica se enfoca en detectar discrepancias en la iluminación global de la imagen. Las modificaciones locales pueden afectar la iluminación general, generando áreas con iluminación incoherente. El análisis de la consistencia de la iluminación revela posibles áreas modificadas.
\end{itemize}
Después de aplicar estas técnicas, se obtuvieron buenos resultados en la detección de áreas modificadas en la imagen. Luego, se centró en detectar el área modificada utilizando las características extraídas por el modelo. Se decidió utilizar una de las capas más significativas del modelo para generar una máscara binarizada y aplicarla como mapa de color a la imagen, logrando resaltar visualmente el área modificada de manera efectiva.\\\\
Una vez que el modelo fue consolidado, se llevó a cabo una exhaustiva búsqueda de mejoras para aumentar su rendimiento. Se optimizaron los hiperparámetros del modelo utilizando la biblioteca Optuna. Optuna permitió automatizar esta tarea evaluando y seleccionando diferentes combinaciones de valores de hiperparámetros según su rendimiento en la métrica objetivo.\\\\
La utilización de Optuna resultó especialmente ventajosa, ya que proporcionó un enfoque sistemático y eficiente para encontrar los mejores valores de hiperparámetros. Mediante su capacidad de explorar y evaluar múltiples configuraciones, se lograron obtener hiperparámetros óptimos que maximizaron el rendimiento del modelo.\\\\
Este enfoque de búsqueda de hiperparámetros con Optuna fue crucial para mejorar significativamente el funcionamiento del modelo, obteniendo resultados más precisos y robustos. Los hiperparámetros óptimos encontrados se utilizaron en la construcción del modelo final, lo cual contribuyó a su destacado desempeño en términos de la métrica objetivo establecida.
\subsection{Resultados obtenidos en términos de precisión, rendimiento y otros indicadores relevantes}
Se ha consolidado un modelo con resultados satisfactorios que ha sido evaluado en un conjunto de pruebas independiente. Es importante destacar que este conjunto de pruebas no se utilizó durante el entrenamiento ni la validación del modelo, lo que garantiza que los resultados obtenidos sean indicativos confiables de su capacidad de generalización.\\\\
Las métricas presentadas en la tabla proporcionan información valiosa sobre el rendimiento del modelo. La precisión, precisión positiva, sensibilidad, puntuación F1 y el área bajo la curva ROC (AUC) nos permiten evaluar su capacidad para clasificar correctamente las instancias.\\\\
Estos resultados validan la capacidad del modelo para realizar predicciones precisas y resaltan su rendimiento en términos de precisión y capacidad para capturar adecuadamente las instancias positivas.
\begin{table}[h]
\centering
\caption{Resultados del Modelo}
\label{tab:resultados}
\begin{tabular}{|l|c|}
\hline
\textbf{Metrics} & \textbf{Value} \\
\hline
Precision & 0.927 \\
Positive Precision & 0.935 \\
Sensitivity & 0.918 \\
F1-Score & 0.919 \\
Area under the ROC Curve (AUC) & 0.927 \\
Average Precision & 0.870 \\
Average Sensitivity & 0.680\\ 
\hline
\end{tabular}
\end{table}

\begin{table}[htbp]
  \centering
  \caption{Matriz de Confusión}
  \label{tab:confusion_matrix}
  \begin{tabular}{cc|>{\columncolor[gray]{0.9}}c|>{\columncolor[gray]{0.9}}c|}
    \cline{3-4}
    & & \multicolumn{2}{c|}{Predicción} \\ \cline{3-4}
    & & \textbf{Auténtica} & \textbf{Modificada} \\ \hline
    \multicolumn{1}{|c|}{\multirow{2}{*}{\rotatebox[origin=c]{90}{Real}}} & \textbf{Auténtica} & 0.9 & 0.098 \\ \cline{2-4}
    \multicolumn{1}{|c|}{} & \textbf{Modificada} & 0.03 & \cellcolor[gray]{0.9}0.97 \\ \hline
  \end{tabular}
\end{table}

\begin{figure}[htbp]
  \centering
  \begin{minipage}[b]{0.50\linewidth}
    \centering
    \includegraphics[width=\linewidth]{R-P.png}
    \caption{Curva de Precisión y Sensibilidad}
    \label{fig:confusion_matrix}
  \end{minipage}
  \hfill
  \begin{minipage}[b]{0.45\linewidth}
    \centering
    \includegraphics[width=\linewidth]{roc.png}
    \caption{Curva ROC}
    \label{fig:Curva_ROC}
  \end{minipage}
\end{figure}


\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.9\linewidth]{probability.png}
  \caption{Distribución de Probabilidades}
  \label{fig:Curva_ROC}
\end{figure}
\section{Análisis de resultados}
A continuación, se presentarán los resultados obtenidos tras la implementación del modelo que ha demostrado los mejores resultados hasta la fecha. Se incluirán las principales métricas de rendimiento evaluadas, así como la visualización de los resultados en imágenes auténticas y modificadas. Estos resultados proporcionan una evaluación objetiva y precisa de la efectividad del sistema de detección, permitiéndonos analizar su desempeño en términos de precisión, velocidad, eficiencia y otras métricas relevantes. Además, la comparación visual entre imágenes auténticas y modificadas destaca la capacidad del modelo para detectar y distinguir las modificaciones realizadas.
\subsection{Evaluación de los resultados obtenidos}
El modelo ha logrado un rendimiento destacado en la detección de imágenes modificadas utilizando redes neuronales. Los resultados obtenidos respaldan esta afirmación:
\begin{itemize}
    \item \textbf{Precisión}: El modelo ha alcanzado una precisión del 92.7\%, lo que implica que es capaz de clasificar correctamente el 92.7\% de las imágenes evaluadas. Esta alta precisión demuestra la habilidad del modelo para realizar una clasificación precisa y confiable de las imágenes.
    \item \textbf{Precisión positiva}: La precisión positiva del modelo es del 93.5\%, lo que significa que de todas las imágenes clasificadas como modificadas, el 93.5\% fueron correctamente identificadas. Esto destaca la eficacia del modelo en la detección precisa de las imágenes modificadas y su capacidad para evitar falsos positivos.
    \item \textbf{Sensibilidad}: La sensibilidad del modelo es del 91.8\%, indicando su capacidad para detectar correctamente el 91.8\% de las imágenes modificadas presentes en el conjunto de datos evaluado. Una alta sensibilidad es crucial para identificar adecuadamente las imágenes modificadas y minimizar los falsos negativos.
    \item \textbf{Puntuación F1}: La puntuación F1 del modelo es del 91.9\%, una medida que combina tanto la precisión como la sensibilidad. Un valor más alto de la puntuación F1 indica un mejor equilibrio entre la capacidad de clasificación precisa y la capacidad de detección correcta de las imágenes modificadas.
    \item \textbf{Área bajo la curva ROC (AUC)}: El área bajo la curva ROC es del 92.7\%, lo que refleja la capacidad del modelo para distinguir entre imágenes auténticas y modificadas. Un valor más alto del AUC indica un mejor rendimiento en la tarea de detección de modificaciones, lo que confirma la efectividad del modelo en esta tarea específica.
    \item \textbf{Precisión media}: La precisión media del modelo es del 87.0\%, lo que muestra su capacidad general para clasificar correctamente las imágenes auténticas y modificadas. Esta métrica es fundamental para evaluar el rendimiento global del modelo en la clasificación de imágenes.
    \item \textbf{Sensibilidad media}: La sensibilidad media del modelo es del 68.0\%, lo que indica su capacidad general para detectar correctamente las imágenes modificadas en el conjunto de datos evaluado. Una sensibilidad media alta es esencial para minimizar los falsos negativos y garantizar una detección precisa en general.
\end{itemize}
El modelo ha demostrado un excelente rendimiento en la detección de imágenes modificadas utilizando redes neuronales. Los resultados obtenidos, incluyendo alta precisión, precisión positiva, sensibilidad y puntuación F1, destacan su capacidad para identificar y clasificar correctamente las imágenes modificadas. Además, el área bajo la curva ROC confirma su habilidad para distinguir de manera efectiva entre imágenes auténticas y modificadas.\\\\
Es importante tener en cuenta que estos resultados se basan en el conjunto de datos utilizado en la evaluación y pueden variar en diferentes escenarios o conjuntos de datos. Sin embargo, estos resultados proporcionan una sólida base para continuar mejorando y desarrollando soluciones efectivas en el campo de la detección de imágenes modificadas mediante el uso de redes neuronales.
\begin{figure}[htbp]
  \centering
  \includegraphics[width=1\linewidth]{capas_pred_1_fake_2.png}
  \caption{Últimas 6 capas extraídas por el modelo}
  \label{fig:confusion_matrix}
\end{figure}
\begin{figure}[htbp]
  \centering
  \includegraphics[width=1\linewidth]{pred_1_fake.png}
  \caption{Imagen modificada clasificada con la identificación de la zona alterada.}
  \label{fig:confusion_matrix}
\end{figure}
\begin{figure}[htbp]
  \centering
  \includegraphics[width=1\linewidth]{pred_2_real.png}
  \caption{Imagen real clasificada}
  \label{fig:confusion_matrix}
\end{figure}
\subsection{Discusión y reflexión sobre los aciertos y desafíos encontrados durante el desarrollo del modelo}
Durante el desarrollo de este proyecto en el campo de la detección de imágenes modificadas mediante redes neuronales, se han encontrado tanto logros como desafíos significativos que brindan una valiosa reflexión sobre el proceso y los resultados obtenidos.\\\\
Entre los logros, se destaca el destacado rendimiento del modelo en la tarea de detección de imágenes modificadas. Los resultados obtenidos, como se mencionó anteriormente, muestran una alta precisión, precisión positiva, sensibilidad y puntuación F1. Esto indica la capacidad del modelo para clasificar correctamente las imágenes modificadas, evitando falsos positivos y falsos negativos. Además, el área bajo la curva ROC (AUC) refleja su eficacia en distinguir entre imágenes auténticas y modificadas.\\\\
El uso de redes neuronales ha demostrado ser una estrategia prometedora en la detección de imágenes modificadas. Los algoritmos de aprendizaje profundo han sido capaces de extraer características relevantes y aprender patrones distintivos que permiten una identificación precisa de las modificaciones. Este logro resalta la importancia y el potencial de utilizar técnicas de inteligencia artificial en la detección de imágenes modificadas.\\\\
Sin embargo, también se han enfrentado desafíos durante el desarrollo de este proyecto. Uno de los principales desafíos ha sido la disponibilidad y calidad del conjunto de datos utilizado para entrenar y evaluar el modelo. La falta de datos etiquetados y la presencia de ruido o ambigüedad en las etiquetas pueden afectar la precisión y generalización del modelo. Además, la variabilidad en las imágenes modificadas y las técnicas utilizadas para realizar las modificaciones pueden dificultar la detección precisa. Estos desafíos resaltan la importancia de contar con conjuntos de datos representativos y bien etiquetados, así como la necesidad de desarrollar técnicas robustas capaces de enfrentar la diversidad de modificaciones posibles.\\\\
Otro desafío significativo es el tiempo y los recursos computacionales requeridos para el entrenamiento y evaluación de modelos de redes neuronales. El proceso de entrenamiento puede ser computacionalmente intensivo, especialmente al utilizar arquitecturas complejas o grandes conjuntos de datos. La optimización de los algoritmos y el uso eficiente de los recursos son fundamentales para desarrollar soluciones escalables y prácticas en el campo de la detección de imágenes modificadas.
\section{Conclusiones}
Durante el desarrollo de este Trabajo de Fin de Grado centrado en la detección de imágenes modificadas mediante redes neuronales, se han realizado investigaciones y análisis que han revelado hallazgos y conclusiones importantes.
\subsection{Resumen de los principales hallazgos del trabajo}
A continuación, se presenta un resumen de los resultados clave obtenidos:
\begin{itemize}
\item El modelo ha demostrado un rendimiento destacado en la detección de imágenes modificadas, respaldado por una alta precisión, precisión positiva, sensibilidad y puntuación F1. Esto demuestra la capacidad del modelo para clasificar correctamente las imágenes modificadas y evitar errores en la detección.

\item La calidad y disponibilidad de los conjuntos de datos utilizados en el entrenamiento y evaluación del modelo son cruciales para obtener resultados precisos y generalizables. Se recomienda trabajar en la recopilación de conjuntos de datos bien etiquetados y representativos para mejorar el rendimiento de los modelos de detección.

\item La diversidad de técnicas de modificación de imágenes representa un desafío, ya que los modelos deben ser capaces de reconocer diferentes tipos de modificaciones. Es importante desarrollar algoritmos de detección que sean capaces de adaptarse y abordar nuevas técnicas de modificación.

\item El entrenamiento y evaluación de modelos de redes neuronales puede requerir recursos computacionales significativos. La optimización de algoritmos y el uso eficiente de los recursos disponibles son fundamentales para desarrollar soluciones prácticas y escalables en la detección de imágenes modificadas.

\item El preprocesamiento de imágenes desempeña un papel crucial en la detección precisa de modificaciones. Técnicas como la normalización, el ajuste de contraste, la reducción de ruido y la eliminación de artefactos contribuyen a mejorar la calidad de los datos de entrada y facilitar la detección de modificaciones.
\end{itemize}
En resumen, este TFG ha demostrado el excelente rendimiento de los modelos de redes neuronales en la detección de imágenes modificadas, respaldando su eficacia en la clasificación precisa y evitando errores. Se ha resaltado la importancia de conjuntos de datos de alta calidad, diversidad de técnicas de modificación y preprocesamiento adecuado de imágenes. Además, se han identificado los desafíos computacionales asociados y la necesidad de continuar investigando para desarrollar soluciones más efectivas y robustas en este campo.
\subsection{Cumplimiento de los objetivos planteados}
\textbf{Objetivos generales:}
\begin{itemize}
\item Se ha desarrollado con éxito un modelo de detección de modificaciones utilizando redes neuronales, implementando algoritmos específicos que destacan las características clave para lograr una detección precisa de imágenes o videos modificados. El modelo ha demostrado su capacidad para identificar patrones y características relevantes, lo que ha contribuido a su eficacia en la detección de modificaciones.
\item El sistema ha sido exhaustivamente evaluado en términos de precisión, velocidad y eficiencia, utilizando pruebas rigurosas y métricas apropiadas. Los resultados obtenidos proporcionan información relevante sobre el rendimiento del sistema en la detección de modificaciones. Se ha demostrado que el modelo es altamente preciso y eficiente, lo que lo posiciona como una herramienta efectiva para detectar modificaciones en imágenes y videos.
\end{itemize}
\vspace{0.5cm}
\textbf{Objetivos específicos:}
\begin{itemize}
\item Se ha realizado una exhaustiva revisión de la literatura relacionada con la detección de modificaciones en imágenes y videos, centrándose especialmente en técnicas basadas en redes neuronales. Esta revisión ha permitido obtener un conocimiento sólido sobre el estado del arte en el campo, así como identificar las mejores prácticas y enfoques relevantes. El enfoque adoptado en el desarrollo del sistema se ha basado en esta revisión y ha asegurado la incorporación de los avances más recientes en detección de modificaciones.
\item Se ha llevado a cabo una investigación exhaustiva y se han implementado algoritmos específicos para detectar posibles zonas modificadas en imágenes. Estos algoritmos se han implementado de manera efectiva, teniendo en cuenta las características de las modificaciones y las particularidades de las imágenes. Se han ajustado y optimizado para mejorar su rendimiento y se han integrado como una herramienta complementaria en el proceso de detección de áreas modificadas.
\item Se ha realizado una cuidadosa selección de conjuntos de datos adecuados para el entrenamiento y evaluación del sistema. Se ha puesto especial énfasis en la calidad y representatividad de los conjuntos de datos utilizados, considerando la diversidad de modificaciones existentes. Además, se han preparado conjuntos de datos específicos para realizar pruebas apropiadas y exhaustivas, permitiendo así mejorar el modelo de detección mediante el aprendizaje de fallos y errores, así como la exploración de diversas aproximaciones y enfoques.
\end{itemize}
\subsection{Posibles mejoras y recomendaciones para futuras investigaciones}
Se identifican áreas para mejoras e investigación futura en el sistema de detección de modificaciones. A continuación, se presentan recomendaciones para abordar estos aspectos y mejorar el rendimiento:
\begin{itemize}
\item Aumento y diversificación del conjunto de datos: Ampliar y diversificar el conjunto de datos utilizado en el entrenamiento y evaluación del sistema mejora la capacidad del modelo para aprender patrones y características representativas de las modificaciones, mejorando así la precisión y generalización.

\item Exploración de modelos de red neuronal avanzados: Investigar modelos más complejos y avanzados permitiría un mayor aprendizaje y detección de características, mejorando potencialmente la precisión del sistema. También se puede explorar el uso de técnicas de transferencia de aprendizaje y hardware más potente para acelerar el entrenamiento.

\item Investigación en preprocesamiento de imágenes: Continuar explorando y mejorando el algoritmo de Análisis del Nivel de Error (ELA) y considerar técnicas complementarias puede mejorar el rendimiento. Además, optimizar la función de redimensionamiento de imágenes minimizando la pérdida de información y artefactos sería beneficioso.

\item Optimización del rendimiento computacional: Utilizar recursos computacionales más potentes, como GPU, aceleraría el entrenamiento y la inferencia del modelo. También se puede considerar la paralelización y distribución del procesamiento para aprovechar al máximo los recursos disponibles.

\item Evaluación en diferentes escenarios y dominios: Realizar pruebas en diversos entornos con condiciones variables permitirá validar la robustez y generalización del sistema en situaciones del mundo real.
\end{itemize}
\section{Agradecimientos}
Quiero expresar mi más profundo agradecimiento a todas las personas que han sido parte integral de mi trayectoria desde que tomé la valiente decisión de dejar mi hogar en Honduras y embarcarme en un desafiante viaje lleno de incertidumbre y oportunidades inimaginables.\\\\
En primer lugar, deseo rendir un homenaje especial a dos mujeres excepcionales que han sido fundamentales en mi vida: mi querida madre Patricia y mi amada abuela materna Consuelo. Su inquebrantable apoyo, amor incondicional y ejemplares valores han sido mi faro durante todo este proceso. Gracias a su constante aliento, he comprendido que la perseverancia y los principios son fundamentales para lograr grandes metas. Me han enseñado que cada sacrificio conlleva una recompensa y que el esfuerzo invertido siempre vale la pena.\\\\
En segundo lugar, dedico este trabajo a mi Grupo de Trabajo de la Universidad "Pibardos". Durante los últimos cuatro años, ustedes han sido una parte indispensable de mi experiencia académica. Quiero expresar mi más sincero agradecimiento por el apoyo emocional y académico que nos hemos brindado mutuamente. Comenzamos como compañeros de clase y hemos construido una amistad inestimable a lo largo del tiempo. Su presencia y colaboración han sido pilares fundamentales en mi crecimiento personal y profesional.\\\\
No puedo dejar de agradecer profundamente a mis respetados profesores del Departamento de Computación. Su dedicación, conocimiento y compromiso con nuestra educación han sido un ejemplo constante de excelencia y liderazgo. Han sido guías y mentores en este fascinante viaje, proporcionándome las herramientas necesarias para alcanzar mis metas. Su contribución a mi desarrollo académico y personal es invaluable, y les estoy sinceramente agradecido por su impacto en mi vida.\\\\
También quiero extender mi agradecimiento a los distinguidos profesores docentes de grado superior del Instituto Manuel Vázquez Montalbán. Fueron ustedes quienes me inspiraron para continuar con mis estudios y me animaron a perseguir la carrera de Ingeniería Informática. Su dedicación y pasión por la enseñanza despertaron en mí el deseo de aprender y crecer en este campo.\\\\
Además, deseo expresar mi gratitud a todos aquellos compañeros que, de una u otra manera, me han brindado su apoyo. Sus comentarios positivos, valiosos consejos, confianza depositada en mí y el privilegio de representar a la Universidad como delegado durante cuatro años han dejado una huella imborrable en mi experiencia. Agradezco también al Consell d'Estudiants de l'Escola d'Enginyeria por su respaldo y colaboración.\\\\
Por último, quiero dedicar este trabajo a todas las personas que, aunque no mencione de manera explícita, han sido componentes esenciales en mi camino. Su aliento, amistad y contribuciones han dejado una huella positiva en mi vida y han contribuido significativamente a mi crecimiento personal y profesional.\\\\
Expreso mi más sincero agradecimiento a cada uno de ustedes por ser una parte invaluable en este viaje. Sin su apoyo, comprensión y estímulo, no habría sido posible llegar hasta esta etapa. Este trabajo es un testimonio de nuestro esfuerzo colectivo y del poder transformador de las relaciones humanas. Gracias de todo corazón.
\begin{thebibliography}{11}
\bibitem{rajini} Rajini, N. Hema. \textit{Image Forgery Identification using Convolution Neural Network}.
\bibitem{abdwarif} Abd Warif, Nor Bakiah; Idris, Mohd. Yamani Idna; Abdul Wahab, Ainuddin Wahid; Salleh, Rosli. \textit{An Evaluation of Error Level Analysis in Image Forensics}.
\bibitem{rao} Rao, Yuan; Ni, Jiangqun. \textit{A Deep Learning Approach to Detection of Splicing and Copy-Move Forgeries in Images}.
\bibitem{farid1} Farid, Hany. \textit{Digital Image Forensics}.
\bibitem{carvalhoa} Carvalhoa, Tiago; Farid, Hany; Kee, Eric. \textit{Exposing Photo Manipulation From User-Guided 3-D Lighting Analysis}.
\bibitem{obrien1} O'Brien, James F.; Farid, Hany. \textit{Exposing Photo Manipulation with Inconsistent Reflections}.
\bibitem{kee} Kee, Eric; O'Brien, James; Farid, Hany. \textit{Exposing Photo Manipulation with Inconsistent Shadows}.
\bibitem{gerstner} Gerstner, Candice R.; Farid, Hany. \textit{Detecting Real-Time Deep-Fake Videos Using Active Illumination}.
\bibitem{sencar} Sencar, Husrev Taha; Verdoliva, Luisa; Memon, Nasir. \textit{Advances in Computer Vision and Pattern Recognition}.
\bibitem{li} Li, Yuezun; Yang, Xin; Sun, Pu; Qi, Honggang; Lyu, Siwei. \textit{Celeb-DF: A Large-scale Challenging Dataset for DeepFake Forensics}.
\bibitem{fakedphotos} \textit{How to Detect Faked Photos - A reprint from American Scientist the magazine of Sigma Xi, The Scientific Research Society}.
\bibitem{agarwal2017}
Shruti Agarwal and Hany Farid. \emph{Detecting Deep-Fake Videos from Phoneme-Viseme Mismatches}. University of California, Berkeley, Berkeley, CA, USA.
\bibitem{wang2015}
Weihong Wang and Hany Farid. \emph{Exposing Digital Forgeries in Interlaced and De-Interlaced Video}. IEEE.
\end{thebibliography}
\newpage
\appendix

\section*{Apèndix}
A continuación, presentamos los apéndices que complementan y enriquecen el contenido de este trabajo. En ellos se detallan las estrategias y métodos utilizados para mejorar el sistema de detección de manipulación implementado.
\setcounter{section}{1}
\subsection{Diseño y estructura de la red neuronal desarrollada}
La red neuronal comienza con una capa de entrada que recibe imágenes de tamaño 128x128 píxeles en tres canales de color (RGB). Esta capa se conecta a dos capas convolucionales, cada una compuesta por 32 filtros y utiliza la función de activación ReLU. Posteriormente, se aplica una capa de MaxPooling para reducir la dimensión espacial de la salida y se incorpora una capa de Dropout para prevenir el sobreajuste.
\begin{figure}[htbp]
  \centering
  \begin{minipage}[t]{0.2\textwidth}
    \centering
    \includegraphics[width=0.6\textwidth]{arquitectura_1_0927.png}
    \caption{Arquitectura de la red neuronal - Parte 1}
    \label{fig:imagen1}
  \end{minipage}\hfill
  \begin{minipage}[t]{0.2\textwidth}
    \centering
    \includegraphics[width=0.6\textwidth]{arquitectura_2_0927.png}
    \caption{Arquitectura de la red neuronal - Parte 2}
    \label{fig:imagen2}
  \end{minipage}
\end{figure}
Luego, se agregan dos conjuntos adicionales de capas convolucionales y MaxPooling, aumentando el número de filtros a 128 en cada capa convolucional. Estas capas extraen características más complejas y abstractas de las imágenes.\\\\
Después de las capas convolucionales y MaxPooling, se utiliza una capa de Flatten para aplanar la salida y convertirla en un vector unidimensional. Este vector se conecta a una capa completamente conectada con 512 neuronas y utiliza la función de activación ReLU para capturar relaciones no lineales complejas en los datos.\\\\
Para evitar el sobreajuste, se incluye una capa de Dropout después de la capa densa, que descarta aleatoriamente una fracción de las activaciones. Finalmente, se agrega una capa de salida con 2 neuronas y se utiliza la función de activación softmax, que produce una distribución de probabilidad sobre las dos posibles clases de salida: auténtica o manipulada.\\\\
Esta estructura de la red neuronal está diseñada para procesar y extraer características de manera efectiva a partir de imágenes. Las capas convolucionales detectan características locales, las capas de MaxPooling reducen las dimensiones espaciales y las capas densas capturan relaciones de alto nivel en los datos. El uso de Dropout contribuye a regularizar el modelo y mejorar la capacidad de generalización, y la activación softmax en la capa de salida permite clasificar las imágenes en las dos clases objetivo.
\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.3\linewidth]{arquitectura_3_0927.png}
  \caption{Arquitectura de la red neuronal - Parte 3}
  \label{fig:confusion_matrix}
\end{figure}
\subsection{Búsqueda de los hiperparametros}
Durante el desarrollo del proyecto, nos hemos enfocado en mejorar y optimizar nuestro modelo para alcanzar su mejor versión, buscando hiperparámetros que impulsen su rendimiento y mejoren su capacidad de generalización. Para lograrlo, hemos realizado una serie de experimentos rigurosos y exhaustivos.\\\\
Utilizamos técnicas de búsqueda de hiperparámetros, en particular la optimización bayesiana con la biblioteca Optuna. Esta metodología nos ha permitido explorar y descubrir las mejores configuraciones de parámetros para nuestro modelo de redes neuronales convolucionales.\\\\
A través de la optimización bayesiana, realizamos múltiples iteraciones evaluando diferentes combinaciones de hiperparámetros clave, como la tasa de aprendizaje, el tamaño del lote (batch size), y la cantidad de capas y filtros convolucionales. Nuestro objetivo principal fue encontrar la configuración que maximizara la precisión del modelo y minimizara los riesgos de sobreajuste o subajuste.\\\\
Este enfoque nos ha permitido descubrir hiperparámetros óptimos que mejoran significativamente el rendimiento del modelo. Al ajustar cuidadosamente estos parámetros, logramos aumentar la precisión de las predicciones y mitigar los problemas de sobreajuste o subajuste, lo que nos brinda una mejor capacidad de generalización en la detección de manipulación de imágenes.\\
\begin{figure}[htbp]
  \centering
  \includegraphics[width=1\linewidth]{hyperparametros.png}
  \caption{Resultado de la búsqueda de hiperparametros}
  \label{fig:confusion_matrix}
\end{figure}
\begin{tabular}{cccccc}
\hline
N\_iteration & filters & dropout & learning\_rate & accuracy \\
\hline
14 & 32 & 0.338 & 0.00043& 0.931 \\
17 & 32 & 0.336 & 0.00010 & 0.930 \\
6 & 32 & 0.327 & 0.00011 & 0.928 \\
18 & 32 & 0.419 & 0.00023 & 0.926 \\
13 & 32 & 0.353 & 0.00047 & 0.926 \\
12 & 16 & 0.367 & 0.00010 & 0.923 \\
2 & 16 & 0.470 & 0.00016 & 0.916 \\
4 & 16 & 0.412 & 0.00022 & 0.915 \\
16 & 32 & 0.286 & 0.00058 & 0.911 \\
15 & 32 & 0.265 & 0.00044 & 0.911 \\
19 & 32 & 0.346 & 0.00074 & 0.909 \\
9 & 16 & 0.226 & 0.0012 & 0.909 \\
10 & 32 & 0.230 & 0.00011 & 0.905 \\
11 & 32 & 0.384 & 0.00032 & 0.904 \\
7 & 16 & 0.477 & 0.0110 & 0.507 \\
3 & 64 & 0.411 & 0.04107& 0.507 \\
1 & 64 & 0.485 & 0.0014 & 0.493 \\
8 & 64 & 0.124 & 0.010 & 0.493 \\
5 & 64 & 0.309 & 0.0017 & 0.493 \\
\hline
\end{tabular}
\subsection{Mejora de la detección de alteraciones en imágenes mediante técnicas adicionales de análisis y su complemento con la predicción del modelo}
En nuestro enfoque para mejorar la detección de alteraciones en las imágenes, no nos hemos limitado solo a la predicción del modelo. Además de utilizar un modelo de aprendizaje automático, hemos implementado diversas técnicas adicionales que nos han permitido obtener resultados más precisos y robustos.\\\\
Una de estas técnicas es el análisis de la distribución de píxeles. Al examinar detalladamente los patrones y cambios en los valores de los píxeles de una imagen, podemos identificar áreas que podrían haber sido modificadas. Esto nos brinda una visión más completa y detallada de las alteraciones presentes en la imagen.\\\\
\begin{figure}[htbp]
  \centering
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.8\linewidth]{pred_1_fake_pixels.png}
   
    \label{fig:imagen1}
  \end{subfigure}
  
  \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.8\linewidth]{pred_2_fake_pixels.png}
    \label{fig:imagen2}
  \end{subfigure}

   \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.8\linewidth]{pred_3_fake_pixels.png}
    \label{fig:imagen3}
  \end{subfigure}

   \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.8\linewidth]{pred_4_fake_pixels.png}
    \label{fig:imagen4}
  \end{subfigure}
  
  \caption{Detección de alteraciones mediante distribución de píxeles.}
  \label{fig:ambas_imagenes}
\end{figure}
Otra técnica que hemos utilizado es la detección de inconsistencias en la iluminación. Al analizar las discrepancias en la iluminación dentro de la imagen, podemos identificar áreas que han sido alteradas o manipuladas en términos de su iluminación. Esto resulta especialmente útil en casos donde se han realizado manipulaciones sutiles en la imagen que podrían pasar desapercibidas para el modelo de predicción.
\begin{figure}[htbp]
  \centering
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.8\linewidth]{pred_1_fake_iluminacion.png}
   
    \label{fig:imagen1}
  \end{subfigure}
  
  \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.8\linewidth]{pred_2_fake_iluminacion.png}
    \label{fig:imagen2}
  \end{subfigure}

   \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.8\linewidth]{pred_3_fake_iluminacion.png}
    \label{fig:imagen3}
  \end{subfigure}

   \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.8\linewidth]{pred_4_fake_iluminacion.png}
    \label{fig:imagen4}
  \end{subfigure}
  
  \caption{Detección de alteraciones mediante inconsistencias de iluminación.}
  \label{fig:ambas_imagenes}
\end{figure}
Además, hemos aplicado el Histograma de Gradientes Orientados (HOG), una técnica reconocida por su capacidad para describir y detectar patrones locales en una imagen. Al calcular los gradientes de los píxeles en diferentes regiones de la imagen, podemos identificar características distintivas que pueden indicar modificaciones o alteraciones. Esta técnica nos proporciona información adicional y complementaria a la predicción del modelo.\\\\
\begin{figure}[htbp]
  \centering
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.4\linewidth]{pred_1_fake_HOG.png}
   
    \label{fig:imagen1}
  \end{subfigure}
  
  \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.4\linewidth]{pred_2_fake_HOG.png}
    \label{fig:imagen2}
  \end{subfigure}

   \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.4\linewidth]{pred_3_fake_HOG.png}
    \label{fig:imagen3}
  \end{subfigure}

   \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=0.4\linewidth]{pred_4_fake_HOG.png}
    \label{fig:imagen4}
  \end{subfigure}
  
  \caption{Detección de alteraciones mediante HOG.}
  \label{fig:ambas_imagenes}
\end{figure}\\
La combinación de estas técnicas adicionales con la predicción del modelo ha demostrado ser altamente efectiva en la detección y análisis de las alteraciones presentes en las imágenes evaluadas. La información obtenida a través de estas técnicas nos permite tener una mayor confianza en los resultados y nos brinda una comprensión más profunda de las modificaciones realizadas en las imágenes.

\subsection{Pruebas de generación de modelo para obtención de máscaras}
Se planteó como objetivo detectar el área o zona modificada en las imágenes mediante la extracción de máscaras. Para esto, se utilizaron tanto las imágenes originales como las imágenes modificadas, con el fin de identificar y visualizar las diferencias entre ambas versiones.\\\\
Aunque no se logró obtener un modelo paralelo para generar las máscaras de forma automática, la extracción de máscaras nos permitió observar dónde se encontraban las modificaciones realizadas en la imagen. Esta observación resultó ser valiosa, ya que nos permitió validar las detecciones realizadas en otras pruebas de detección de zonas manipuladas.\\\\
Si bien la generación automática de máscaras es un aspecto que requiere mejoras y desarrollos adicionales, el proceso de extracción de máscaras nos brindó información útil y nos sirvió como punto de partida para evaluar y perfeccionar las técnicas de detección de áreas modificadas en futuras investigaciones. Seguimos trabajando en la mejora de este proceso con el objetivo de lograr una detección precisa y confiable de las áreas modificadas en imágenes.\\\\
\begin{figure}[htbp]
  \centering
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=1\linewidth]{mascara-01.png}
   
    \label{fig:imagen1}
  \end{subfigure}
  
  \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=1\linewidth]{mascara-02.png}
    \label{fig:imagen2}
  \end{subfigure}

   \vspace{10pt} % Espacio vertical entre las subfiguras
  
  \begin{subfigure}{\linewidth}
    \centering
    \includegraphics[width=1\linewidth]{mascara-03.png}
    \label{fig:imagen3}
  \end{subfigure}
  \caption{Ejemplo de modificación de imágenes con su máscara correspondiente.}
  \label{fig:ambas_imagenes}
\end{figure}

\subsection{Pruebas con imágenes generadas utilizando ImageNet.}
Se realizaron pruebas y experimentos utilizando un enfoque personalizado para generar datos y entrenar modelos de detección de alteraciones en imágenes. Se empleó el dataset de ImageNet, una amplia colección de imágenes que abarca diversas categorías y escenarios visuales.\\\\
Para crear nuestro dataset personalizado, se seleccionaron imágenes al azar de ImageNet y se realizaron recortes de objetos relevantes presentes en cada imagen. Estos recortes representaban elementos como personas, animales y objetos inanimados.\\\\
Luego, se aplicó una estrategia de pegado de los recortes en otras imágenes seleccionadas al azar, variando tamaños y posiciones de forma aleatoria. Esto permitió simular diversas alteraciones en las imágenes, como la inserción de objetos en contextos inapropiados o la modificación de la composición original.\\\\
Sin embargo, los resultados del entrenamiento de los modelos de detección no fueron muy positivos en términos de precisión. Se observó que los modelos tenían dificultades para distinguir de manera precisa las áreas modificadas en las imágenes generadas.\\\\
Esto puede atribuirse a la complejidad de las alteraciones simuladas y a la variedad de escenarios presentes en el dataset. Las manipulaciones realizadas, aunque realistas, presentaron desafíos adicionales para los modelos, ya que las diferencias entre las imágenes originales y modificadas podían ser sutiles o difíciles de discernir.\\\\
A pesar de estos resultados, el proceso de generación de datos personalizado y el entrenamiento de los modelos proporcionaron información valiosa. Se identificaron limitaciones y áreas de mejora en la detección de alteraciones en imágenes, lo cual guiará futuras investigaciones y mejoras en los enfoques de detección para abordar con mayor precisión y eficacia los desafíos asociados con las alteraciones en las imágenes.
\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.8\linewidth]{ejemplo.png}
  \caption{Ejemplo de generación de imágenes}
  \label{fig:confusion_matrix}
\end{figure}

\end{document}

